package com.offerme.client.activity;

import com.offerme.R;
import com.offerme.client.service.UtilSrvc;
import com.offerme.client.service.publishoffer.OfferInfo;
import com.offerme.client.service.search.SearchResulatItem;

import android.content.Context;
import android.content.Intent;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

public class PublisherDetailInfoActivity extends ActionBarActivity {
	private UtilSrvc utilSrvc = UtilSrvc.getInstance();
	private SearchResulatItem searchResualt;
	private TextView publisher;
	private TextView mail;
	private TextView date;
	private TextView post;
	private TextView phone;
	private TextView city;
	private TextView entreprise;
	private ImageView profile;

	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_publisher_info);
		Intent intent = this.getIntent();
		searchResualt = (SearchResulatItem) intent
				.getSerializableExtra("PublisherDetail");
		getSupportActionBar().setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM);
		getSupportActionBar().setCustomView(
				R.layout.activity_publisher_offerinfo_actionbar);
		initialize();
		loadData();
	}

	@Override
	public void onBackPressed() {
		utilSrvc.gotoPublisherInfoPage(this, searchResualt);
		return;
	}

	public void backToPublisherInfo() {
		utilSrvc.gotoPublisherInfoPage(this, searchResualt);
		return;
	}

	public void setFavorite() {

	}

	public void sendMail() {

	}

	private void initialize() {
		publisher = (TextView) findViewById(R.id.publisher_name_bar_center);
		profile = (ImageView) findViewById(R.id.publisher_profile);
		mail = (TextView) findViewById(R.id.publisher_mail);
		phone = (TextView) findViewById(R.id.publisher_phone);
		city = (TextView) findViewById(R.id.publisher_city);
		entreprise = (TextView) findViewById(R.id.publisher_entreprise);
	}

	private void loadData() {
		//publisher.setText(searchResualt.getName());
		mail.setText(searchResualt.getMailbox());
		city.setText(searchResualt.getCity());
		phone.setText(searchResualt.getPublisherInfo().getTelephone());
		entreprise.setText(searchResualt.getEntreprise());
		if (searchResualt.getPublisherInfo().getProfile() != null) {
			profile.setImageBitmap(BitmapFactory.decodeByteArray(searchResualt
					.getPublisherInfo().getProfile(), 0, searchResualt
					.getPublisherInfo().getProfile().length));
		}
		ListView resultList = (ListView) findViewById(R.id.publisher_item_list);
		resultList.setAdapter(new postInfoList());
		resultList.setOnItemClickListener(new clickListener(this));
	}

	private class postInfoList extends BaseAdapter {

		@Override
		public int getCount() {
			return searchResualt.getOfferInfo().length;
		}

		@Override
		public Object getItem(int position) {
			return searchResualt.getOfferInfo()[position];
		}

		@Override
		public long getItemId(int position) {
			return position;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			OfferInfo offer = (OfferInfo) this.getItem(position);
			if (convertView == null) {
				LayoutInflater layoutInflater = (LayoutInflater) PublisherDetailInfoActivity.this
						.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
				convertView = layoutInflater.inflate(
						R.layout.activity_publisher_info_post_item, null);
			}
			post = (TextView) convertView
					.findViewById(R.id.publisher_list_post);
			date = (TextView) convertView
					.findViewById(R.id.publisher_list_date);
			entreprise = (TextView) convertView
					.findViewById(R.id.publisher_list_entreprise);
			city = (TextView) convertView
					.findViewById(R.id.publisher_list_city);
			post.setText(offer.getPost());
			date.setText(offer.getDate());
			entreprise.setText(offer.getEntreprise());
			city.setText(offer.getCity());
			return convertView;
		}

	}

	private class clickListener implements OnItemClickListener {
		private Context context;

		public clickListener(Context ctx) {
			context = ctx;
		}

		@Override
		public void onItemClick(AdapterView<?> parent, View view, int position,
				long id) {
			if (utilSrvc.isNetworkConnected(context)) {
				OfferInfo offer = searchResualt.getOfferInfo()[position];
				searchResualt.setTitle(offer.getPost());
				searchResualt.setCity(offer.getCity());
				searchResualt.setDate(offer.getDate());
				searchResualt.setEntreprise(offer.getEntreprise());
				searchResualt.setDescription(offer.getDescription());
				searchResualt.setOfferID(offer.getOfferID());
				utilSrvc.gotoPublisherInfoPage(context, searchResualt);
			} else {
				utilSrvc.showConnectDialog(context);
			}
		}
	}

}
