package com.offerme.client.activity;

import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.view.Gravity;
import android.view.View;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RadioGroup.OnCheckedChangeListener;
import android.widget.Toast;

import com.offerme.R;
import com.offerme.client.service.PollingSrvc;
import com.offerme.client.service.UtilSrvc;
import com.offerme.client.service.util.PollingUtils;

public class LoggedInActivity extends ActionBarActivity {

	private SearchOfferActivity searchFragment;
	private PersonalSettingActivity personFragment;
	private ChatFriendListActivity chatFragment;
	private FragmentManager fragmentManager = getSupportFragmentManager();
	private UtilSrvc utilSrvc = UtilSrvc.getInstance();
	private FragmentTransaction fragmentTransaction;
	private RadioButton startButton;
	private int exitClick = 0;

	private enum fragmentName {
		SEARCH_FRAGMENT, CHAT_FRAGMENT, ME_FRAGMENT
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_logged_in);
		exitClick = 0;
		init();
		initRadios();
		//Start polling service
		PollingUtils.startPollingService(this, 5, PollingSrvc.class, PollingSrvc.ACTION);
	}
	
	@Override
	protected void onDestroy() {
		super.onDestroy();
		
		//Stop polling service
		PollingUtils.stopPollingService(this, PollingSrvc.class, PollingSrvc.ACTION);
	}

	@Override
	public void onBackPressed() {
		if (exitClick == 0) {
			Toast toast = Toast.makeText(this, "再按一次退出程序", Toast.LENGTH_SHORT);
			toast.setGravity(Gravity.CENTER, 0, 0);
			toast.show();
			exitClick++;
		} else {
			exitClick = 0;
			moveTaskToBack(true);
			android.os.Process.killProcess(android.os.Process.myPid());
			System.exit(1);
		}
		return;
	}

	private void init() {

		fragmentTransaction = fragmentManager.beginTransaction();
		Intent intent = this.getIntent();
		if (intent.getBooleanExtra("StartFromUser", false)) {
			setActionBar(fragmentName.ME_FRAGMENT);
			personFragment = new PersonalSettingActivity();
			fragmentTransaction.add(R.id.fragment_container, personFragment)
					.commit();
			startButton = (RadioButton) findViewById(R.id.rb_setting);
		} else {
			setActionBar(fragmentName.SEARCH_FRAGMENT);
			searchFragment = new SearchOfferActivity();
			searchFragment.setArguments(intent.getExtras());
			fragmentTransaction.add(R.id.fragment_container, searchFragment)
					.commit();
			startButton = (RadioButton) findViewById(R.id.rb_search);
		}
		startButton.setChecked(true);

	}

	private void initRadios() {
		RadioGroup radioGroup = (RadioGroup) findViewById(R.id.radioGroup);
		radioGroup.setOnCheckedChangeListener(new checkChange(this));
	}

	private void setActionBar(fragmentName fragmentID) {
		getSupportActionBar().setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM);
		switch (fragmentID) {
		case SEARCH_FRAGMENT:
			getSupportActionBar().setCustomView(
					R.layout.activity_search_actionbar);
			getSupportActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor("#1e90d2"))); 
			break;
		case CHAT_FRAGMENT:
			getSupportActionBar().setCustomView(
					R.layout.activity_chat_friend_list_actionbar);
			break;
		case ME_FRAGMENT:
			getSupportActionBar().setCustomView(
					R.layout.activity_personal_setting_actionbar);
			getSupportActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor("#1e90d2"))); 
			break;
		}
	}

	private class checkChange implements OnCheckedChangeListener {

		private LoggedInActivity loggedin;

		public checkChange(LoggedInActivity in) {
			loggedin = in;
		}

		@Override
		public void onCheckedChanged(RadioGroup group, int checkedId) {
			fragmentTransaction = fragmentManager.beginTransaction();
			Bundle args = new Bundle();
			switch (checkedId) {
			case R.id.rb_search:
				setActionBar(fragmentName.SEARCH_FRAGMENT);
				searchFragment = new SearchOfferActivity();
				searchFragment.setArguments(args);
				fragmentTransaction.replace(R.id.fragment_container,
						searchFragment);
				break;

			case R.id.rb_publish:
				utilSrvc.gotoPublishOfferPage(loggedin);
				break;

			case R.id.rb_mail:
				setActionBar(fragmentName.CHAT_FRAGMENT);
				chatFragment = new ChatFriendListActivity();
				chatFragment.setArguments(args);
				fragmentTransaction.replace(R.id.fragment_container,
						chatFragment);
				break;

			case R.id.rb_setting:
				setActionBar(fragmentName.ME_FRAGMENT);
				personFragment = new PersonalSettingActivity();
				personFragment.setArguments(args);
				fragmentTransaction.replace(R.id.fragment_container,
						personFragment);
				break;

			default:
				break;
			}
			fragmentTransaction.addToBackStack(null);
			fragmentTransaction.commit();
		}

	}

	public void chatMessage(View view) {
		if (utilSrvc.isNetworkConnected(this)) {
			utilSrvc.gotoChatPage(this);
		} else {
			utilSrvc.showConnectDialog(this);
		}
	}

	public void goToSetting(View view) {
		utilSrvc.gotoSettingPage(this);
	}


	public void setFragment(int checkedId) {
	}
}
